{
    "sourceFile": "lib/widgets/shared/helper/listenable_animated_widget/listenable_animated_container.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1698818316659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698818346719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,5 @@\n+import \"package:flutter/material.dart\";\r\n+\r\n+class ListenableAnimatedContainer extends AnimatedContainer {\r\n+  ListenableAnimatedContainer({required super.duraton,super.key}) : super();\r\n+}\r\n"
                },
                {
                    "date": 1698818377384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,130 @@\n import \"package:flutter/material.dart\";\r\n \r\n class ListenableAnimatedContainer extends AnimatedContainer {\r\n-  ListenableAnimatedContainer({required super.duraton,super.key}) : super();\r\n+  /// Creates a container that animates its parameters implicitly.\r\n+  AnimatedContainer({\r\n\\ No newline at end of file\n+    super.key,\r\n+    this.alignment,\r\n+    this.padding,\r\n+    Color? color,\r\n+    Decoration? decoration,\r\n+    this.foregroundDecoration,\r\n+    double? width,\r\n+    double? height,\r\n+    BoxConstraints? constraints,\r\n+    this.margin,\r\n+    this.transform,\r\n+    this.transformAlignment,\r\n+    this.child,\r\n+    this.clipBehavior = Clip.none,\r\n+    super.curve,\r\n+    required super.duration,\r\n+    super.onEnd,\r\n+  }) : assert(margin == null || margin.isNonNegative),\r\n+       assert(padding == null || padding.isNonNegative),\r\n+       assert(decoration == null || decoration.debugAssertIsValid()),\r\n+       assert(constraints == null || constraints.debugAssertIsValid()),\r\n+       assert(color == null || decoration == null,\r\n+         'Cannot provide both a color and a decoration\\n'\r\n+         'The color argument is just a shorthand for \"decoration: BoxDecoration(color: color)\".',\r\n+       ),\r\n+       decoration = decoration ?? (color != null ? BoxDecoration(color: color) : null),\r\n+       constraints =\r\n+        (width != null || height != null)\r\n+          ? constraints?.tighten(width: width, height: height)\r\n+            ?? BoxConstraints.tightFor(width: width, height: height)\r\n+          : constraints;\r\n+\r\n+  /// The [child] contained by the container.\r\n+  ///\r\n+  /// If null, and if the [constraints] are unbounded or also null, the\r\n+  /// container will expand to fill all available space in its parent, unless\r\n+  /// the parent provides unbounded constraints, in which case the container\r\n+  /// will attempt to be as small as possible.\r\n+  ///\r\n+  /// {@macro flutter.widgets.ProxyWidget.child}\r\n+  final Widget? child;\r\n+\r\n+  /// Align the [child] within the container.\r\n+  ///\r\n+  /// If non-null, the container will expand to fill its parent and position its\r\n+  /// child within itself according to the given value. If the incoming\r\n+  /// constraints are unbounded, then the child will be shrink-wrapped instead.\r\n+  ///\r\n+  /// Ignored if [child] is null.\r\n+  ///\r\n+  /// See also:\r\n+  ///\r\n+  ///  * [Alignment], a class with convenient constants typically used to\r\n+  ///    specify an [AlignmentGeometry].\r\n+  ///  * [AlignmentDirectional], like [Alignment] for specifying alignments\r\n+  ///    relative to text direction.\r\n+  final AlignmentGeometry? alignment;\r\n+\r\n+  /// Empty space to inscribe inside the [decoration]. The [child], if any, is\r\n+  /// placed inside this padding.\r\n+  final EdgeInsetsGeometry? padding;\r\n+\r\n+  /// The decoration to paint behind the [child].\r\n+  ///\r\n+  /// A shorthand for specifying just a solid color is available in the\r\n+  /// constructor: set the `color` argument instead of the `decoration`\r\n+  /// argument.\r\n+  final Decoration? decoration;\r\n+\r\n+  /// The decoration to paint in front of the child.\r\n+  final Decoration? foregroundDecoration;\r\n+\r\n+  /// Additional constraints to apply to the child.\r\n+  ///\r\n+  /// The constructor `width` and `height` arguments are combined with the\r\n+  /// `constraints` argument to set this property.\r\n+  ///\r\n+  /// The [padding] goes inside the constraints.\r\n+  final BoxConstraints? constraints;\r\n+\r\n+  /// Empty space to surround the [decoration] and [child].\r\n+  final EdgeInsetsGeometry? margin;\r\n+\r\n+  /// The transformation matrix to apply before painting the container.\r\n+  final Matrix4? transform;\r\n+\r\n+  /// The alignment of the origin, relative to the size of the container, if [transform] is specified.\r\n+  ///\r\n+  /// When [transform] is null, the value of this property is ignored.\r\n+  ///\r\n+  /// See also:\r\n+  ///\r\n+  ///  * [Transform.alignment], which is set by this property.\r\n+  final AlignmentGeometry? transformAlignment;\r\n+\r\n+  /// The clip behavior when [AnimatedContainer.decoration] is not null.\r\n+  ///\r\n+  /// Defaults to [Clip.none]. Must be [Clip.none] if [decoration] is null.\r\n+  ///\r\n+  /// Unlike other properties of [AnimatedContainer], changes to this property\r\n+  /// apply immediately and have no animation.\r\n+  ///\r\n+  /// If a clip is to be applied, the [Decoration.getClipPath] method\r\n+  /// for the provided decoration must return a clip path. (This is not\r\n+  /// supported by all decorations; the default implementation of that\r\n+  /// method throws an [UnsupportedError].)\r\n+  final Clip clipBehavior;\r\n+\r\n+  @override\r\n+  AnimatedWidgetBaseState<AnimatedContainer> createState() => _AnimatedContainerState();\r\n+\r\n+  @override\r\n+  void debugFillProperties(DiagnosticPropertiesBuilder properties) {\r\n+    super.debugFillProperties(properties);\r\n+    properties.add(DiagnosticsProperty<AlignmentGeometry>('alignment', alignment, showName: false, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<EdgeInsetsGeometry>('padding', padding, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<Decoration>('bg', decoration, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<Decoration>('fg', foregroundDecoration, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<BoxConstraints>('constraints', constraints, defaultValue: null, showName: false));\r\n+    properties.add(DiagnosticsProperty<EdgeInsetsGeometry>('margin', margin, defaultValue: null));\r\n+    properties.add(ObjectFlagProperty<Matrix4>.has('transform', transform));\r\n+    properties.add(DiagnosticsProperty<AlignmentGeometry>('transformAlignment', transformAlignment, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<Clip>('clipBehavior', clipBehavior));\r\n+  }\r\n }\r\n-c\n"
                },
                {
                    "date": 1698818407593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,13 @@\n+// ignore_for_file: prefer_asserts_with_message\r\n+\r\n import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/widgets/shared/helper/listenable_animated_widget/listenable_animated_widget.dart\";\r\n \r\n-class ListenableAnimatedContainer extends AnimatedContainer {\r\n+class ListenableAnimatedContainer extends ListenableImplicitlyAnimatedWidget {\r\n   /// Creates a container that animates its parameters implicitly.\r\n-  AnimatedContainer({\r\n+  ListenableAnimatedContainer({\r\n+    required super.duration,\r\n     super.key,\r\n     this.alignment,\r\n     this.padding,\r\n     Color? color,\r\n@@ -17,24 +21,23 @@\n     this.transformAlignment,\r\n     this.child,\r\n     this.clipBehavior = Clip.none,\r\n     super.curve,\r\n-    required super.duration,\r\n     super.onEnd,\r\n-  }) : assert(margin == null || margin.isNonNegative),\r\n-       assert(padding == null || padding.isNonNegative),\r\n-       assert(decoration == null || decoration.debugAssertIsValid()),\r\n-       assert(constraints == null || constraints.debugAssertIsValid()),\r\n-       assert(color == null || decoration == null,\r\n-         'Cannot provide both a color and a decoration\\n'\r\n-         'The color argument is just a shorthand for \"decoration: BoxDecoration(color: color)\".',\r\n-       ),\r\n-       decoration = decoration ?? (color != null ? BoxDecoration(color: color) : null),\r\n-       constraints =\r\n-        (width != null || height != null)\r\n-          ? constraints?.tighten(width: width, height: height)\r\n-            ?? BoxConstraints.tightFor(width: width, height: height)\r\n-          : constraints;\r\n+  })  : assert(margin == null || margin.isNonNegative),\r\n+        assert(padding == null || padding.isNonNegative),\r\n+        assert(decoration == null || decoration.debugAssertIsValid()),\r\n+        assert(constraints == null || constraints.debugAssertIsValid()),\r\n+        assert(\r\n+          color == null || decoration == null,\r\n+          \"Cannot provide both a color and a decoration\\n\"\r\n+          'The color argument is just a shorthand for \"decoration: BoxDecoration(color: color)\".',\r\n+        ),\r\n+        decoration = decoration ?? (color != null ? BoxDecoration(color: color) : null),\r\n+        constraints = (width != null || height != null)\r\n+            ? constraints?.tighten(width: width, height: height) ??\r\n+                BoxConstraints.tightFor(width: width, height: height)\r\n+            : constraints;\r\n \r\n   /// The [child] contained by the container.\r\n   ///\r\n   /// If null, and if the [constraints] are unbounded or also null, the\r\n@@ -116,15 +119,17 @@\n \r\n   @override\r\n   void debugFillProperties(DiagnosticPropertiesBuilder properties) {\r\n     super.debugFillProperties(properties);\r\n-    properties.add(DiagnosticsProperty<AlignmentGeometry>('alignment', alignment, showName: false, defaultValue: null));\r\n-    properties.add(DiagnosticsProperty<EdgeInsetsGeometry>('padding', padding, defaultValue: null));\r\n-    properties.add(DiagnosticsProperty<Decoration>('bg', decoration, defaultValue: null));\r\n-    properties.add(DiagnosticsProperty<Decoration>('fg', foregroundDecoration, defaultValue: null));\r\n-    properties.add(DiagnosticsProperty<BoxConstraints>('constraints', constraints, defaultValue: null, showName: false));\r\n-    properties.add(DiagnosticsProperty<EdgeInsetsGeometry>('margin', margin, defaultValue: null));\r\n-    properties.add(ObjectFlagProperty<Matrix4>.has('transform', transform));\r\n-    properties.add(DiagnosticsProperty<AlignmentGeometry>('transformAlignment', transformAlignment, defaultValue: null));\r\n-    properties.add(DiagnosticsProperty<Clip>('clipBehavior', clipBehavior));\r\n+    properties.add(DiagnosticsProperty<AlignmentGeometry>(\"alignment\", alignment, showName: false, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<EdgeInsetsGeometry>(\"padding\", padding, defaultValue: null));\r\n\\ No newline at end of file\n+    properties.add(DiagnosticsProperty<Decoration>(\"bg\", decoration, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<Decoration>(\"fg\", foregroundDecoration, defaultValue: null));\r\n+    properties\r\n+        .add(DiagnosticsProperty<BoxConstraints>(\"constraints\", constraints, defaultValue: null, showName: false));\r\n+    properties.add(DiagnosticsProperty<EdgeInsetsGeometry>(\"margin\", margin, defaultValue: null));\r\n+    properties.add(ObjectFlagProperty<Matrix4>.has(\"transform\", transform));\r\n+    properties\r\n+        .add(DiagnosticsProperty<AlignmentGeometry>(\"transformAlignment\", transformAlignment, defaultValue: null));\r\n+    properties.add(DiagnosticsProperty<Clip>(\"clipBehavior\", clipBehavior));\r\n   }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1698818440694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n // ignore_for_file: prefer_asserts_with_message\r\n \r\n+import \"package:flutter/foundation.dart\";\r\n import \"package:flutter/material.dart\";\r\n import \"package:fridgital/widgets/shared/helper/listenable_animated_widget/listenable_animated_widget.dart\";\r\n \r\n class ListenableAnimatedContainer extends ListenableImplicitlyAnimatedWidget {\r\n@@ -131,5 +132,88 @@\n     properties\r\n         .add(DiagnosticsProperty<AlignmentGeometry>(\"transformAlignment\", transformAlignment, defaultValue: null));\r\n     properties.add(DiagnosticsProperty<Clip>(\"clipBehavior\", clipBehavior));\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+class _AnimatedContainerState extends LAnimatedWidgetBaseState<AnimatedContainer> {\r\n+  AlignmentGeometryTween? _alignment;\r\n+  EdgeInsetsGeometryTween? _padding;\r\n+  DecorationTween? _decoration;\r\n+  DecorationTween? _foregroundDecoration;\r\n+  BoxConstraintsTween? _constraints;\r\n+  EdgeInsetsGeometryTween? _margin;\r\n+  Matrix4Tween? _transform;\r\n+  AlignmentGeometryTween? _transformAlignment;\r\n+\r\n+  @override\r\n+  void forEachTween(TweenVisitor<dynamic> visitor) {\r\n+    _alignment = visitor(\r\n+      _alignment,\r\n+      widget.alignment,\r\n+      (dynamic value) => AlignmentGeometryTween(begin: value as AlignmentGeometry),\r\n+    ) as AlignmentGeometryTween?;\r\n+    _padding = visitor(\r\n+      _padding,\r\n+      widget.padding,\r\n+      (dynamic value) => EdgeInsetsGeometryTween(begin: value as EdgeInsetsGeometry),\r\n+    ) as EdgeInsetsGeometryTween?;\r\n+    _decoration =\r\n+        visitor(_decoration, widget.decoration, (dynamic value) => DecorationTween(begin: value as Decoration))\r\n+            as DecorationTween?;\r\n+    _foregroundDecoration = visitor(\r\n+      _foregroundDecoration,\r\n+      widget.foregroundDecoration,\r\n+      (dynamic value) => DecorationTween(begin: value as Decoration),\r\n+    ) as DecorationTween?;\r\n+    _constraints = visitor(\r\n+      _constraints,\r\n+      widget.constraints,\r\n+      (dynamic value) => BoxConstraintsTween(begin: value as BoxConstraints),\r\n+    ) as BoxConstraintsTween?;\r\n+    _margin =\r\n+        visitor(_margin, widget.margin, (dynamic value) => EdgeInsetsGeometryTween(begin: value as EdgeInsetsGeometry))\r\n+            as EdgeInsetsGeometryTween?;\r\n+    _transform = visitor(_transform, widget.transform, (dynamic value) => Matrix4Tween(begin: value as Matrix4))\r\n+        as Matrix4Tween?;\r\n+    _transformAlignment = visitor(\r\n+      _transformAlignment,\r\n+      widget.transformAlignment,\r\n+      (dynamic value) => AlignmentGeometryTween(begin: value as AlignmentGeometry),\r\n+    ) as AlignmentGeometryTween?;\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    var animation = this.animation;\r\n+    return Container(\r\n+      alignment: _alignment?.evaluate(animation),\r\n+      padding: _padding?.evaluate(animation),\r\n+      decoration: _decoration?.evaluate(animation),\r\n+      foregroundDecoration: _foregroundDecoration?.evaluate(animation),\r\n+      constraints: _constraints?.evaluate(animation),\r\n+      margin: _margin?.evaluate(animation),\r\n+      transform: _transform?.evaluate(animation),\r\n+      transformAlignment: _transformAlignment?.evaluate(animation),\r\n+      clipBehavior: widget.clipBehavior,\r\n+      child: widget.child,\r\n+    );\r\n+  }\r\n+\r\n+  @override\r\n+  void debugFillProperties(DiagnosticPropertiesBuilder description) {\r\n+    super.debugFillProperties(description);\r\n+    description\r\n+        .add(DiagnosticsProperty<AlignmentGeometryTween>(\"alignment\", _alignment, showName: false, defaultValue: null));\r\n+    description.add(DiagnosticsProperty<EdgeInsetsGeometryTween>(\"padding\", _padding, defaultValue: null));\r\n+    description.add(DiagnosticsProperty<DecorationTween>(\"bg\", _decoration, defaultValue: null));\r\n+    description.add(DiagnosticsProperty<DecorationTween>(\"fg\", _foregroundDecoration, defaultValue: null));\r\n+    description.add(\r\n+      DiagnosticsProperty<BoxConstraintsTween>(\"constraints\", _constraints, showName: false, defaultValue: null),\r\n+    );\r\n+    description.add(DiagnosticsProperty<EdgeInsetsGeometryTween>(\"margin\", _margin, defaultValue: null));\r\n+    description.add(ObjectFlagProperty<Matrix4Tween>.has(\"transform\", _transform));\r\n+    description.add(\r\n+      DiagnosticsProperty<AlignmentGeometryTween>(\"transformAlignment\", _transformAlignment, defaultValue: null),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1698818493083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n     this.child,\r\n     this.clipBehavior = Clip.none,\r\n     super.curve,\r\n     super.onEnd,\r\n+    super.onEnd,\r\n   })  : assert(margin == null || margin.isNonNegative),\r\n         assert(padding == null || padding.isNonNegative),\r\n         assert(decoration == null || decoration.debugAssertIsValid()),\r\n         assert(constraints == null || constraints.debugAssertIsValid()),\r\n@@ -115,9 +116,9 @@\n   /// method throws an [UnsupportedError].)\r\n   final Clip clipBehavior;\r\n \r\n   @override\r\n-  AnimatedWidgetBaseState<AnimatedContainer> createState() => _AnimatedContainerState();\r\n+  ListenableAnimatedWidgetBaseState<ListenableAnimatedContainer> createState() => _ListenableAnimatedContainerState();\r\n \r\n   @override\r\n   void debugFillProperties(DiagnosticPropertiesBuilder properties) {\r\n     super.debugFillProperties(properties);\r\n@@ -134,9 +135,9 @@\n     properties.add(DiagnosticsProperty<Clip>(\"clipBehavior\", clipBehavior));\r\n   }\r\n }\r\n \r\n-class _AnimatedContainerState extends LAnimatedWidgetBaseState<AnimatedContainer> {\r\n+class _ListenableAnimatedContainerState extends ListenableAnimatedWidgetBaseState<ListenableAnimatedContainer> {\r\n   AlignmentGeometryTween? _alignment;\r\n   EdgeInsetsGeometryTween? _padding;\r\n   DecorationTween? _decoration;\r\n   DecorationTween? _foregroundDecoration;\r\n"
                }
            ],
            "date": 1698818316659,
            "name": "Commit-0",
            "content": "c"
        }
    ]
}
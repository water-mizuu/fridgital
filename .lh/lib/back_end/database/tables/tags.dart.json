{
    "sourceFile": "lib/back_end/database/tables/tags.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 48,
            "patches": [
                {
                    "date": 1700135053815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700135116156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,3 @@\n+\r\n+\r\n c\n\\ No newline at end of file\n"
                },
                {
                    "date": 1700135146597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,23 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n \r\n\\ No newline at end of file\n+final class TagsTable extends DatabaseTable {\r\n+  @override\r\n+  Future<void> create() {\r\n+    database.e\r\n+    throw UnimplementedError();\r\n+  }\r\n \r\n-c\n+  @override\r\n+  Future<void> delete() {\r\n+    // TODO: implement delete\r\n+    throw UnimplementedError();\r\n+  }\r\n+\r\n+  @override\r\n+  Future<void> update() {\r\n+    // TODO: implement update\r\n+    throw UnimplementedError();\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1700135185443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+\r\n+final class TagsTable extends DatabaseTable {\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE t (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  @override\r\n+  Future<void> delete() async {\r\n+    // TODO: implement delete\r\n+    throw UnimplementedError();\r\n+  }\r\n+\r\n+  @override\r\n+  Future<void> update() async {\r\n+    // TODO: implement update\r\n+    throw UnimplementedError();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700135217741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,18 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+\r\n+final class TagsTable extends DatabaseTable {\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE tags (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1700135248787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n import \"package:fridgital/main.dart\";\r\n \r\n final class TagsTable extends DatabaseTable {\r\n   @override\r\n@@ -14,57 +15,10 @@\n       \"\"\",\r\n     );\r\n   }\r\n \r\n-}\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n+  Future<Iterable<Tag>> readTags() async {\r\n+    var rows = await database.query(\"tags\");\r\n \r\n-final class TagsTable extends DatabaseTable {\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE t (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n+    return rows.map((row) => Tag(row[\"name\"], Color(row[\"color\"])));\r\n   }\r\n-\r\n-  @override\r\n-  Future<void> delete() async {\r\n-    // TODO: implement delete\r\n-    throw UnimplementedError();\r\n-  }\r\n-\r\n-  @override\r\n-  Future<void> update() async {\r\n-    // TODO: implement update\r\n-    throw UnimplementedError();\r\n-  }\r\n }\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-\r\n-final class TagsTable extends DatabaseTable {\r\n-  @override\r\n-  Future<void> create() {\r\n-    database.e\r\n-    throw UnimplementedError();\r\n-  }\r\n-\r\n-  @override\r\n-  Future<void> delete() {\r\n-    // TODO: implement delete\r\n-    throw UnimplementedError();\r\n-  }\r\n-\r\n-  @override\r\n-  Future<void> update() {\r\n-    // TODO: implement update\r\n-    throw UnimplementedError();\r\n\\ No newline at end of file\n-  }\r\n-\r\n-}\n"
                },
                {
                    "date": 1700135279931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import \"package:fridgital/back_end/database/tables/table.dart\";\r\n import \"package:fridgital/back_end/tag_data.dart\";\r\n import \"package:fridgital/main.dart\";\r\n \r\n-final class TagsTable extends DatabaseTable {\r\n+final class CustomTagsTable extends DatabaseTable {\r\n   @override\r\n   Future<void> create() async {\r\n     await database.execute(\r\n       \"\"\"\r\n@@ -18,7 +18,7 @@\n \r\n   Future<Iterable<Tag>> readTags() async {\r\n     var rows = await database.query(\"tags\");\r\n \r\n-    return rows.map((row) => Tag(row[\"name\"], Color(row[\"color\"])));\r\n+    return rows.map((row) => CustomTag(row[\"name\"], C(row[\"color\"])));\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700135310380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import \"package:fridgital/back_end/database/tables/table.dart\";\r\n import \"package:fridgital/back_end/tag_data.dart\";\r\n import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n \r\n final class CustomTagsTable extends DatabaseTable {\r\n   @override\r\n   Future<void> create() async {\r\n@@ -18,7 +19,7 @@\n \r\n   Future<Iterable<Tag>> readTags() async {\r\n     var rows = await database.query(\"tags\");\r\n \r\n-    return rows.map((row) => CustomTag(row[\"name\"], C(row[\"color\"])));\r\n+    return rows.map((row) => CustomTag(row[\"name\"], TagColors.selectable.i(row[\"color\"])));\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700135342654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,9 @@\n \r\n   Future<Iterable<Tag>> readTags() async {\r\n     var rows = await database.query(\"tags\");\r\n \r\n-    return rows.map((row) => CustomTag(row[\"name\"], TagColors.selectable.i(row[\"color\"])));\r\n+    if (row case {id: int id, :})\r\n+\r\n+    return rows.map((row) => CustomTag(row[\"name\"], TagColors.selectable.iterable.toList[row[\"color\"]]));\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700135372820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,11 @@\n \r\n   Future<Iterable<Tag>> readTags() async {\r\n     var rows = await database.query(\"tags\");\r\n \r\n-    if (row case {id: int id, :})\r\n+    if (rows case {\"id\" :int id, \"name\" :String name, \"color\" :int color}) {\r\n \r\n     return rows.map((row) => CustomTag(row[\"name\"], TagColors.selectable.iterable.toList[row[\"color\"]]));\r\n+    }\r\n+\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700135402870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,12 @@\n     );\r\n   }\r\n \r\n   Future<Iterable<Tag>> readTags() async {\r\n+    L\r\n     var rows = await database.query(\"tags\");\r\n \r\n-    if (rows case {\"id\" :int id, \"name\" :String name, \"color\" :int color}) {\r\n-\r\n-    return rows.map((row) => CustomTag(row[\"name\"], TagColors.selectable.iterable.toList[row[\"color\"]]));\r\n+    if (rows case {\"id\": int id, \"name\": String name, \"color\": int color}) {\r\n+      return rows.map((row) => CustomTag(name, TagColors.selectable.iterable.toList()[color]));\r\n     }\r\n-\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700135433355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,15 @@\n     );\r\n   }\r\n \r\n   Future<Iterable<Tag>> readTags() async {\r\n-    L\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n     var rows = await database.query(\"tags\");\r\n \r\n-    if (rows case {\"id\": int id, \"name\": String name, \"color\": int color}) {\r\n-      return rows.map((row) => CustomTag(name, TagColors.selectable.iterable.toList()[color]));\r\n+    return () async {\r\n+      \r\n+    }();\r\n+    if (rows case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+      return rows.map((row) => CustomTag(name, colors[color]));\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700135529915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  \r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE tags (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    var rows = await database.query(\"tags\");\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700135560069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,11 @@\n import \"package:fridgital/main.dart\";\r\n import \"package:fridgital/shared/constants.dart\";\r\n \r\n final class CustomTagsTable extends DatabaseTable {\r\n-  \r\n+  static CustomTagsTable instance = CustomTagsTa\r\n+  CustomTagsTable._();\r\n+\r\n   @override\r\n   Future<void> create() async {\r\n     await database.execute(\r\n       \"\"\"\r\n@@ -30,35 +32,4 @@\n       }\r\n     }();\r\n   }\r\n }\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE tags (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    var rows = await database.query(\"tags\");\r\n-\r\n-    return () async {\r\n-      \r\n-    }();\r\n-    if (rows case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-      return rows.map((row) => CustomTag(name, colors[color]));\r\n-    }\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1700135596033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n       \"\"\",\r\n     );\r\n   }\r\n \r\n-  Future<Iterable<Tag>> readTags() async {\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n     var rows = await database.query(\"tags\");\r\n \r\n     return () sync* {\r\n"
                },
                {
                    "date": 1700135628668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,20 @@\n import \"package:fridgital/main.dart\";\r\n import \"package:fridgital/shared/constants.dart\";\r\n \r\n final class CustomTagsTable extends DatabaseTable {\r\n-  static CustomTagsTable instance = CustomTagsTa\r\n   CustomTagsTable._();\r\n \r\n+  static const String addableTagsTable = \"addableTags\";\r\n+  static const \r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._();\r\n+\r\n   @override\r\n   Future<void> create() async {\r\n     await database.execute(\r\n       \"\"\"\r\n-      CREATE TABLE tags (\r\n+      CREATE TABLE addableTags (\r\n         id INTEGER PRIMARY KEY,\r\n         name TEXT NOT NULL,\r\n         color INTEGER NOT NULL\r\n       )\r\n@@ -21,9 +25,9 @@\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n-    var rows = await database.query(\"tags\");\r\n+    var rows = await database.query(\"addableTags\");\r\n \r\n     return () sync* {\r\n       for (var row in rows) {\r\n         if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n"
                },
                {
                    "date": 1700135950685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    var rows = await database.query(addableTagsTable);\r\n+    \r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700135987006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n   static CustomTagsTable instance = CustomTagsTable._();\r\n \r\n   @override\r\n   Future<void> create() async {\r\n+    await db.execute('DROP TABLE If EXISTS $tableNotes');\r\n     await database.execute(\r\n       \"\"\"\r\n       CREATE TABLE $addableTagsTable (\r\n         id INTEGER PRIMARY KEY,\r\n@@ -25,49 +26,11 @@\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n     var rows = await database.query(addableTagsTable);\r\n-    \r\n \r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-}\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n+    print(rows);\r\n \r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-  static const \r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE addableTags (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    var rows = await database.query(\"addableTags\");\r\n-\r\n     return () sync* {\r\n       for (var row in rows) {\r\n         if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n           yield CustomTag(name, colors[color]);\r\n"
                },
                {
                    "date": 1700136032512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,13 @@\n   CustomTagsTable._();\r\n \r\n   static const String addableTagsTable = \"addableTags\";\r\n \r\n-  static CustomTagsTable instance = CustomTagsTable._();\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n \r\n   @override\r\n   Future<void> create() async {\r\n-    await db.execute('DROP TABLE If EXISTS $tableNotes');\r\n+    await database.execute(\"DROP TABLE IF EXISTS $addableTagsTable\");\r\n     await database.execute(\r\n       \"\"\"\r\n       CREATE TABLE $addableTagsTable (\r\n         id INTEGER PRIMARY KEY,\r\n@@ -25,8 +25,9 @@\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n+    \r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     print(rows);\r\n \r\n"
                },
                {
                    "date": 1700136066225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\"DROP TABLE IF EXISTS $addableTagsTable\");\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> ensureCreated() async {\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    print(rows);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700137216831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async { \r\n+    await database.execute(\"DROP TABLE IF EXISTS $addableTagsTable\");\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    print(rows);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700137526457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,8 @@\n   static CustomTagsTable instance = CustomTagsTable._()..create();\r\n \r\n   @override\r\n   Future<void> create() async { \r\n-    await database.execute(\"DROP TABLE IF EXISTS $addableTagsTable\");\r\n     await database.execute(\r\n       \"\"\"\r\n       CREATE TABLE $addableTagsTable (\r\n         id INTEGER PRIMARY KEY,\r\n@@ -38,90 +37,4 @@\n       }\r\n     }();\r\n   }\r\n }\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\"DROP TABLE IF EXISTS $addableTagsTable\");\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<void> ensureCreated() async {\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    print(rows);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-}\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\"DROP TABLE IF EXISTS $addableTagsTable\");\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    \r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    print(rows);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1700137838217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \r\n   static CustomTagsTable instance = CustomTagsTable._()..create();\r\n \r\n   @override\r\n-  Future<void> create() async { \r\n+  Future<void> create() async {\r\n     await database.execute(\r\n       \"\"\"\r\n       CREATE TABLE $addableTagsTable (\r\n         id INTEGER PRIMARY KEY,\r\n@@ -24,8 +24,10 @@\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n+    // await create();\r\n+    print(\"Created\");\r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     print(rows);\r\n \r\n"
                },
                {
                    "date": 1700137892516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n     // await create();\r\n-    print(\"Created\");\r\n+    print(\"Created);\r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     print(rows);\r\n \r\n"
                },
                {
                    "date": 1700137929792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    // await create();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    print(rows);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700137960257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n-    // await create();\r\n+    var table = db.query('sqlite_master', where: 'name = ?', whereArgs: [a]);\r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     print(rows);\r\n \r\n@@ -38,46 +38,4 @@\n       }\r\n     }();\r\n   }\r\n }\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    // await create();\r\n-    print(\"Created);\r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    print(rows);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1700138013932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,14 @@\n       \"\"\",\r\n     );\r\n   }\r\n \r\n+  Future<void> ensureInitialized() async {\r\n+    var table = database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n+  }\r\n+\r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n-    var table = db.query('sqlite_master', where: 'name = ?', whereArgs: [a]);\r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     print(rows);\r\n \r\n"
                },
                {
                    "date": 1700138044502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> ensureInitialized() async {\r\n+    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n+    \r\n+\r\n+    print(table);\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    await ensureInitialized();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    print(rows);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700138236197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,49 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> ensureInitialized() async {\r\n+    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n+    if (table case []) {\r\n+      await create();\r\n+    }\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    await ensureInitialized();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    print(rows);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+  \r\n+}\r\n"
                },
                {
                    "date": 1700138266455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,98 +44,16 @@\n         }\r\n       }\r\n     }();\r\n   }\r\n-  \r\n-}\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n \r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<void> ensureInitialized() async {\r\n-    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-    \r\n-\r\n-    print(table);\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n+  Future<void> addTag(Tag tag) {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n-    await ensureInitialized();\r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    print(rows);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-}\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n+    return database.insert(\r\n+      addableTagsTable,\r\n+      {\r\n+        \"name\": tag.name,\r\n+        \"color\": TagColors.selectable.(tag.color),\r\n+      },\r\n     );\r\n   }\r\n-\r\n-  Future<void> ensureInitialized() async {\r\n-    var table = database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    print(rows);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n }\r\n"
                },
                {
                    "date": 1700138299094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,15 +45,16 @@\n       }\r\n     }();\r\n   }\r\n \r\n-  Future<void> addTag(Tag tag) {\r\n+  Future<void> addTag(CustomTag tag) {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n+    \r\n     return database.insert(\r\n       addableTagsTable,\r\n       {\r\n         \"name\": tag.name,\r\n-        \"color\": TagColors.selectable.(tag.color),\r\n+        \"color\": colors.indexOf(tag.color),\r\n       },\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700138371051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> ensureInitialized() async {\r\n+    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n+    if (table case []) {\r\n+      await create();\r\n+    }\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    await ensureInitialized();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    print(rows);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+\r\n+  Future<void> addAddableTag(CustomTag tag) {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+\r\n+    return database.insert(\r\n+      addableTagsTable,\r\n+      {\r\n+        \"name\": tag.name,\r\n+        \"color\": colors.indexOf(tag.color),\r\n+      },\r\n+    );\r\n+  }\r\n+  \r\n+}\r\n"
                },
                {
                    "date": 1700138565084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> ensureInitialized() async {\r\n+    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n+    if (table case []) {\r\n+      await create();\r\n+    }\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    \r\n+    await ensureInitialized();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    print(rows);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+\r\n+  Future<void> addAddableTag(CustomTag tag) {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+\r\n+    return database.insert(\r\n+      addableTagsTable,\r\n+      {\r\n+        \"name\": tag.name,\r\n+        \"color\": colors.indexOf(tag.color),\r\n+      },\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> removeAddableTag(CustomTag tag) {\r\n+    return database.delete(\r\n+      addableTagsTable,\r\n+      where: \"name = ?\",\r\n+      whereArgs: [tag.name],\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700138611744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,11 @@\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n-    \r\n+\r\n     await ensureInitialized();\r\n+\r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     print(rows);\r\n \r\n@@ -66,125 +67,4 @@\n       whereArgs: [tag.name],\r\n     );\r\n   }\r\n }\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<void> ensureInitialized() async {\r\n-    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-    if (table case []) {\r\n-      await create();\r\n-    }\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    await ensureInitialized();\r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    print(rows);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-\r\n-  Future<void> addAddableTag(CustomTag tag) {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-\r\n-    return database.insert(\r\n-      addableTagsTable,\r\n-      {\r\n-        \"name\": tag.name,\r\n-        \"color\": colors.indexOf(tag.color),\r\n-      },\r\n-    );\r\n-  }\r\n-  \r\n-}\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<void> ensureInitialized() async {\r\n-    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-    if (table case []) {\r\n-      await create();\r\n-    }\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    await ensureInitialized();\r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    print(rows);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-\r\n-  Future<void> addTag(CustomTag tag) {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-    \r\n-    return database.insert(\r\n-      addableTagsTable,\r\n-      {\r\n-        \"name\": tag.name,\r\n-        \"color\": colors.indexOf(tag.color),\r\n-      },\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1700138658033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,8 @@\n     await ensureInitialized();\r\n \r\n     var rows = await database.query(addableTagsTable);\r\n \r\n-    print(rows);\r\n-\r\n     return () sync* {\r\n       for (var row in rows) {\r\n         if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n           yield CustomTag(name, colors[color]);\r\n"
                },
                {
                    "date": 1700138704846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,15 +48,9 @@\n \r\n   Future<void> addAddableTag(CustomTag tag) {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n \r\n-    return database.insert(\r\n-      addableTagsTable,\r\n-      {\r\n-        \"name\": tag.name,\r\n-        \"color\": colors.indexOf(tag.color),\r\n-      },\r\n-    );\r\n+    return ;\r\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) {\r\n     return database.delete(\r\n"
                },
                {
                    "date": 1700138735830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,12 +45,21 @@\n       }\r\n     }();\r\n   }\r\n \r\n-  Future<void> addAddableTag(CustomTag tag) {\r\n+  Future<void> addAddableTag(CustomTag tag) async {\r\n     var colors = TagColors.selectable.iterable.toList();\r\n \r\n-    return ;\r\n+    var result = await database.insert(\r\n+      addableTagsTable,\r\n+      {\r\n+        \"name\": tag.name,\r\n+        \"color\": colors.indexOf(tag.color),\r\n+      },\r\n+    );\r\n+\r\n+    print(database.query(addableTagsTable));\r\n+    print(result);\r\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) {\r\n     return database.delete(\r\n"
                },
                {
                    "date": 1700138771006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,8 @@\n         \"color\": colors.indexOf(tag.color),\r\n       },\r\n     );\r\n \r\n-    print(database.query(addableTagsTable));\r\n     print(result);\r\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) {\r\n"
                },
                {
                    "date": 1700138801384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+import \"package:fridgital/back_end/database/tables/table.dart\";\r\n+import \"package:fridgital/back_end/tag_data.dart\";\r\n+import \"package:fridgital/main.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+final class CustomTagsTable extends DatabaseTable {\r\n+  CustomTagsTable._();\r\n+\r\n+  static const String addableTagsTable = \"addableTags\";\r\n+\r\n+  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+\r\n+  @override\r\n+  Future<void> create() async {\r\n+    await database.execute(\r\n+      \"\"\"\r\n+      CREATE TABLE $addableTagsTable (\r\n+        id INTEGER PRIMARY KEY,\r\n+        name TEXT NOT NULL,\r\n+        color INTEGER NOT NULL\r\n+      )\r\n+      \"\"\",\r\n+    );\r\n+  }\r\n+\r\n+  Future<void> ensureInitialized() async {\r\n+    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n+    if (table case []) {\r\n+      await create();\r\n+    }\r\n+  }\r\n+\r\n+  Future<Iterable<Tag>> readAddableTags() async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+    await ensureInitialized();\r\n+    var rows = await database.query(addableTagsTable);\r\n+\r\n+    return () sync* {\r\n+      for (var row in rows) {\r\n+        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n+          yield CustomTag(name, colors[color]);\r\n+        }\r\n+      }\r\n+    }();\r\n+  }\r\n+\r\n+  Future<void> addAddableTag(CustomTag tag) async {\r\n+    var colors = TagColors.selectable.iterable.toList();\r\n+\r\n+    await database.insert(\r\n+      addableTagsTable,\r\n+      {\r\n+        \"name\": tag.name,\r\n+        \"color\": colors.indexOf(tag.color),\r\n+      },\r\n+    );\r\n+\r\n+    notifyListeners();\r\n+  }\r\n+\r\n+  Future<void> removeAddableTag(CustomTag tag) async {\r\n+    await database.delete(\r\n+      addableTagsTable,\r\n+      where: \"name = ?\",\r\n+      whereArgs: [tag.name],\r\n+    );\r\n+\r\n+    notifyListeners();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1700138837236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,8 @@\n         \"color\": colors.indexOf(tag.color),\r\n       },\r\n     );\r\n \r\n-    notifyListeners();\r\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) async {\r\n     await database.delete(\r\n@@ -67,74 +66,4 @@\n \r\n     notifyListeners();\r\n   }\r\n }\r\n-import \"package:fridgital/back_end/database/tables/table.dart\";\r\n-import \"package:fridgital/back_end/tag_data.dart\";\r\n-import \"package:fridgital/main.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-final class CustomTagsTable extends DatabaseTable {\r\n-  CustomTagsTable._();\r\n-\r\n-  static const String addableTagsTable = \"addableTags\";\r\n-\r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n-\r\n-  @override\r\n-  Future<void> create() async {\r\n-    await database.execute(\r\n-      \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n-        id INTEGER PRIMARY KEY,\r\n-        name TEXT NOT NULL,\r\n-        color INTEGER NOT NULL\r\n-      )\r\n-      \"\"\",\r\n-    );\r\n-  }\r\n-\r\n-  Future<void> ensureInitialized() async {\r\n-    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-    if (table case []) {\r\n-      await create();\r\n-    }\r\n-  }\r\n-\r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-\r\n-    await ensureInitialized();\r\n-\r\n-    var rows = await database.query(addableTagsTable);\r\n-\r\n-    return () sync* {\r\n-      for (var row in rows) {\r\n-        if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n-        }\r\n-      }\r\n-    }();\r\n-  }\r\n-\r\n-  Future<void> addAddableTag(CustomTag tag) async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n-\r\n-    var result = await database.insert(\r\n-      addableTagsTable,\r\n-      {\r\n-        \"name\": tag.name,\r\n-        \"color\": colors.indexOf(tag.color),\r\n-      },\r\n-    );\r\n-\r\n-    print(result);\r\n-  }\r\n-\r\n-  Future<void> removeAddableTag(CustomTag tag) {\r\n-    return database.delete(\r\n-      addableTagsTable,\r\n-      where: \"name = ?\",\r\n-      whereArgs: [tag.name],\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1700138868450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   CustomTagsTable._();\r\n \r\n   static const String addableTagsTable = \"addableTags\";\r\n \r\n-  static CustomTagsTable instance = CustomTagsTable._()..create();\r\n+  static CustomTagsTable instance = CustomTagsTable._();\r\n \r\n   @override\r\n   Future<void> create() async {\r\n     await database.execute(\r\n@@ -24,9 +24,9 @@\n   }\r\n \r\n   Future<void> ensureInitialized() async {\r\n     var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-    if (table case []) {\r\n+    if (table.isEmpty) {\r\n       await create();\r\n     }\r\n   }\r\n \r\n@@ -53,17 +53,14 @@\n         \"name\": tag.name,\r\n         \"color\": colors.indexOf(tag.color),\r\n       },\r\n     );\r\n-\r\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) async {\r\n     await database.delete(\r\n       addableTagsTable,\r\n       where: \"name = ?\",\r\n       whereArgs: [tag.name],\r\n     );\r\n-\r\n-    notifyListeners();\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700138926868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     }\r\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n+    var colors = TagColors.selectable.iterable.();\r\n     await ensureInitialized();\r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     return () sync* {\r\n"
                },
                {
                    "date": 1700139051272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n   }\r\n \r\n   Future<void> ensureInitialized() async {\r\n     var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n+    \r\n     if (table.isEmpty) {\r\n       await create();\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1700139082784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,16 +24,16 @@\n   }\r\n \r\n   Future<void> ensureInitialized() async {\r\n     var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-    \r\n+    print(await database.query(addableTagsTable));\r\n     if (table.isEmpty) {\r\n       await create();\r\n     }\r\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.iterable.();\r\n+    var colors = TagColors.selectable.list;\r\n     await ensureInitialized();\r\n     var rows = await database.query(addableTagsTable);\r\n \r\n     return () sync* {\r\n@@ -45,9 +45,9 @@\n     }();\r\n   }\r\n \r\n   Future<void> addAddableTag(CustomTag tag) async {\r\n-    var colors = TagColors.selectable.iterable.toList();\r\n+    var colors = TagColors.selectable.list;\r\n \r\n     await database.insert(\r\n       addableTagsTable,\r\n       {\r\n"
                },
                {
                    "date": 1700143596296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,8 @@\n       \"\"\",\r\n     );\r\n   }\r\n \r\n-  Future<void> ensureInitialized() async {\r\n-    var table = await database.query(\"sqlite_master\", where: \"name = ?\", whereArgs: [addableTagsTable]);\r\n-    print(await database.query(addableTagsTable));\r\n-    if (table.isEmpty) {\r\n-      await create();\r\n-    }\r\n-  }\r\n-\r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.list;\r\n     await ensureInitialized();\r\n     var rows = await database.query(addableTagsTable);\r\n"
                },
                {
                    "date": 1700143804226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,18 @@\n \r\n final class CustomTagsTable extends DatabaseTable {\r\n   CustomTagsTable._();\r\n \r\n-  static const String addableTagsTable = \"addableTags\";\r\n+  @override\r\n+  String get name => \"addableTags\";\r\n \r\n   static CustomTagsTable instance = CustomTagsTable._();\r\n \r\n   @override\r\n   Future<void> create() async {\r\n     await database.execute(\r\n       \"\"\"\r\n-      CREATE TABLE $addableTagsTable (\r\n+      CREATE TABLE $name (\r\n         id INTEGER PRIMARY KEY,\r\n         name TEXT NOT NULL,\r\n         color INTEGER NOT NULL\r\n       )\r\n@@ -25,9 +26,9 @@\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n     var colors = TagColors.selectable.list;\r\n     await ensureInitialized();\r\n-    var rows = await database.query(addableTagsTable);\r\n+    var rows = await database.query(name);\r\n \r\n     return () sync* {\r\n       for (var row in rows) {\r\n         if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n@@ -40,9 +41,9 @@\n   Future<void> addAddableTag(CustomTag tag) async {\r\n     var colors = TagColors.selectable.list;\r\n \r\n     await database.insert(\r\n-      addableTagsTable,\r\n+      n,\r\n       {\r\n         \"name\": tag.name,\r\n         \"color\": colors.indexOf(tag.color),\r\n       },\r\n@@ -50,9 +51,9 @@\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) async {\r\n     await database.delete(\r\n-      addableTagsTable,\r\n+      n,\r\n       where: \"name = ?\",\r\n       whereArgs: [tag.name],\r\n     );\r\n   }\r\n"
                },
                {
                    "date": 1700144842885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,23 +38,19 @@\n     }();\r\n   }\r\n \r\n   Future<void> addAddableTag(CustomTag tag) async {\r\n-    var colors = TagColors.selectable.list;\r\n+    var colors = TagColors.selectable.;\r\n \r\n     await database.insert(\r\n-      n,\r\n+      name,\r\n       {\r\n         \"name\": tag.name,\r\n         \"color\": colors.indexOf(tag.color),\r\n       },\r\n     );\r\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) async {\r\n-    await database.delete(\r\n-      n,\r\n-      where: \"name = ?\",\r\n-      whereArgs: [tag.name],\r\n-    );\r\n+    await database.delete(name, where: \"name = ?\", whereArgs: [tag.name]);\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700144873218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,31 +24,22 @@\n     );\r\n   }\r\n \r\n   Future<Iterable<Tag>> readAddableTags() async {\r\n-    var colors = TagColors.selectable.list;\r\n     await ensureInitialized();\r\n     var rows = await database.query(name);\r\n \r\n     return () sync* {\r\n       for (var row in rows) {\r\n         if (row case {\"id\": int _, \"name\": String name, \"color\": int color}) {\r\n-          yield CustomTag(name, colors[color]);\r\n+          yield CustomTag(name, TagColors.selectable[color]);\r\n         }\r\n       }\r\n     }();\r\n   }\r\n \r\n   Future<void> addAddableTag(CustomTag tag) async {\r\n-    var colors = TagColors.selectable.;\r\n-\r\n-    await database.insert(\r\n-      name,\r\n-      {\r\n-        \"name\": tag.name,\r\n-        \"color\": colors.indexOf(tag.color),\r\n-      },\r\n-    );\r\n+    await database.insert(name, { \"name\": tag.name, \"color\": TagColors.selectable.indexOf(tag.color)}    );\r\n   }\r\n \r\n   Future<void> removeAddableTag(CustomTag tag) async {\r\n     await database.delete(name, where: \"name = ?\", whereArgs: [tag.name]);\r\n"
                },
                {
                    "date": 1700148984281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n       \"\"\",\r\n     );\r\n   }\r\n \r\n-  Future<Iterable<Tag>> readAddableTags() async {\r\n+  Future<Iterable<Tag>> fetchAddableTags() async {\r\n     await ensureInitialized();\r\n     var rows = await database.query(name);\r\n \r\n     return () sync* {\r\n"
                }
            ],
            "date": 1700135053815,
            "name": "Commit-0",
            "content": "c"
        }
    ]
}
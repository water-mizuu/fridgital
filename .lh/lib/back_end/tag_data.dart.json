{
    "sourceFile": "lib/back_end/tag_data.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1699832802607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1699832832670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,9 @@\n+import \"package:flutter/material.dart\";\r\n \r\n+class TagData extends ChangeNotifier {}\r\n \r\n+sealed class Tag {}\r\n+\r\n+final class BuiltInTag {\r\n+  const Buil\r\n+}\r\n"
                },
                {
                    "date": 1699832864069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,16 @@\n import \"package:flutter/material.dart\";\r\n \r\n-class TagData extends ChangeNotifier {}\r\n+class TagData extends ChangeNotifier {\r\n+  \r\n+}\r\n \r\n-sealed class Tag {}\r\n+sealed class Tag {\r\n+  String get name;\r\n+}\r\n \r\n-final class BuiltInTag {\r\n-  const Buil\r\n+final class BuiltInTag implements Tag {\r\n+  const BuiltInTag._(this.name);\r\n+\r\n+  @override\r\n+  final String name;\r\n }\r\n"
                },
                {
                    "date": 1699832894177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,11 @@\n import \"package:flutter/material.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n-  \r\n+  static TagData maybeOf(BuildContext context) {\r\n+    return context.dependOnW\r\n+  }\r\n+  final _tags = <Tag>[];\r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n"
                },
                {
                    "date": 1699832954581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/widgets/inherited_widgets/tags_controller.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n-  static TagData maybeOf(BuildContext context) {\r\n-    return context.dependOnW\r\n+  static TagData? maybeOf(BuildContext context) {\r\n+    return context.dependOnInheritedWidgetOfExactType<TagsController>()?.tagData;\r\n   }\r\n+\r\n   final _tags = <Tag>[];\r\n }\r\n \r\n sealed class Tag {\r\n"
                },
                {
                    "date": 1699833019777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,13 @@\n   static TagData? maybeOf(BuildContext context) {\r\n     return context.dependOnInheritedWidgetOfExactType<TagsController>()?.tagData;\r\n   }\r\n \r\n-  final _tags = <Tag>[];\r\n+  static TagData of(BuildContext context) {\r\n+    return maybeOf(context)!;\r\n+  }\r\n+\r\n+  final tags = <Tag>[];\r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n"
                },
                {
                    "date": 1699833178112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import \"package:fridgital/widgets/inherited_widgets/tags_controller.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n   static TagData? maybeOf(BuildContext context) {\r\n-    return context.dependOnInheritedWidgetOfExactType<TagsController>()?.tagData;\r\n+    return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n   }\r\n \r\n   static TagData of(BuildContext context) {\r\n     return maybeOf(context)!;\r\n@@ -22,4 +22,11 @@\n \r\n   @override\r\n   final String name;\r\n }\r\n+\r\n+final class CustomTag implements Tag {\r\n+  const CustomTag(this.name);\r\n+\r\n+  @override\r\n+  final String name;\r\n+}\r\n"
                },
                {
                    "date": 1699833210287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import \"package:flutter/material.dart\";\r\n-import \"package:fridgital/widgets/inherited_widgets/tags_controller.dart\";\r\n+import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n   static TagData? maybeOf(BuildContext context) {\r\n     return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n@@ -9,9 +9,11 @@\n   static TagData of(BuildContext context) {\r\n     return maybeOf(context)!;\r\n   }\r\n \r\n-  final tags = <Tag>[];\r\n+  Ltags;\r\n+\r\n+  TagData(this.tags);\r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n"
                },
                {
                    "date": 1699833273991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n   String get name;\r\n }\r\n \r\n final class BuiltInTag implements Tag {\r\n+  \r\n   const BuiltInTag._(this.name);\r\n \r\n   @override\r\n   final String name;\r\n"
                },
                {
                    "date": 1699833320979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,32 @@\n import \"package:flutter/material.dart\";\r\n import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n+  TagData(this.tags);\r\n+  TagData.empty() : tags = [];\r\n+\r\n   static TagData? maybeOf(BuildContext context) {\r\n     return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n   }\r\n \r\n   static TagData of(BuildContext context) {\r\n     return maybeOf(context)!;\r\n   }\r\n \r\n-  Ltags;\r\n-\r\n-  TagData(this.tags);\r\n+  final List<Tag> tags;\r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n }\r\n \r\n final class BuiltInTag implements Tag {\r\n-  \r\n   const BuiltInTag._(this.name);\r\n \r\n+  static const BuiltInTag essential = BuiltInTag._(\"Essential\");\r\n+  static const \r\n+\r\n   @override\r\n   final String name;\r\n }\r\n \r\n"
                },
                {
                    "date": 1699845031835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n     return maybeOf(context)!;\r\n   }\r\n \r\n   final List<Tag> tags;\r\n+  \r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n@@ -22,10 +23,9 @@\n \r\n final class BuiltInTag implements Tag {\r\n   const BuiltInTag._(this.name);\r\n \r\n-  static const BuiltInTag essential = BuiltInTag._(\"Essential\");\r\n-  static const \r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\");\r\n \r\n   @override\r\n   final String name;\r\n }\r\n"
                },
                {
                    "date": 1699845061923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n   TagData(this.tags);\r\n-  TagData.empty() : tags = [];\r\n+  TagData.empty() : tags = {};\r\n \r\n   static TagData? maybeOf(BuildContext context) {\r\n     return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n   }\r\n@@ -12,10 +12,13 @@\n   static TagData of(BuildContext context) {\r\n     return maybeOf(context)!;\r\n   }\r\n \r\n-  final List<Tag> tags;\r\n-  \r\n+  final Set<Tag> tags;\r\n+\r\n+  void addTag(Tag tag) {\r\n+    if (tagd)\r\n+  }\r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n"
                },
                {
                    "date": 1699845096668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,20 @@\n \r\n   final Set<Tag> tags;\r\n \r\n   void addTag(Tag tag) {\r\n-    if (tagd)\r\n+    if (tags.add(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n   }\r\n+\r\n+  void removeTag(Tag tag) {\r\n+    if (tags.remove(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+\r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n"
                },
                {
                    "date": 1699845156296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,23 +25,25 @@\n     if (tags.remove(tag)) {\r\n       notifyListeners();\r\n     }\r\n   }\r\n-\r\n-\r\n }\r\n \r\n sealed class Tag {\r\n   String get name;\r\n+  Color get color;\r\n }\r\n \r\n final class BuiltInTag implements Tag {\r\n-  const BuiltInTag._(this.name);\r\n+  const BuiltInTag._(this.name, this.color);\r\n \r\n-  static const BuiltInTag essential = BuiltInTag._(\"essentials\");\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\",);\r\n \r\n   @override\r\n   final String name;\r\n+\r\n+  @override\r\n+  final Color color;\r\n }\r\n \r\n final class CustomTag implements Tag {\r\n   const CustomTag(this.name);\r\n"
                },
                {
                    "date": 1699845198141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n   TagData(this.tags);\r\n@@ -35,9 +36,9 @@\n \r\n final class BuiltInTag implements Tag {\r\n   const BuiltInTag._(this.name, this.color);\r\n \r\n-  static const BuiltInTag essential = BuiltInTag._(\"essentials\",);\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n \r\n   @override\r\n   final String name;\r\n \r\n@@ -49,5 +50,6 @@\n   const CustomTag(this.name);\r\n \r\n   @override\r\n   final String name;\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1699957698333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,10 +46,12 @@\n   final Color color;\r\n }\r\n \r\n final class CustomTag implements Tag {\r\n-  const CustomTag(this.name);\r\n+  const CustomTag(this.name, this.color);\r\n \r\n   @override\r\n   final String name;\r\n-  \r\n+\r\n+  @override\r\n+  final UserSelectableColor color;\r\n }\r\n"
                },
                {
                    "date": 1699976262197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/shared/classes/selected_color.dart\";\r\n import \"package:fridgital/shared/constants.dart\";\r\n import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n@@ -13,8 +14,9 @@\n   static TagData of(BuildContext context) {\r\n     return maybeOf(context)!;\r\n   }\r\n \r\n+\r\n   final Set<Tag> tags;\r\n \r\n   void addTag(Tag tag) {\r\n     if (tags.add(tag)) {\r\n"
                },
                {
                    "date": 1700114025079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/shared/classes/selected_color.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n+\r\n+class TagData extends ChangeNotifier {\r\n+  TagData(this.availableTags, this.tags);\r\n+  TagData.empty()\r\n+      : availableTags = {},\r\n+        tags = {};\r\n+\r\n+  static TagData? maybeOf(BuildContext context) {\r\n+    return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n+  }\r\n+\r\n+  static TagData of(BuildContext context) {\r\n+    return maybeOf(context)!;\r\n+  }\r\n+\r\n+\r\n+  final Set<Tag> availableTags;\r\n+  final Set<Tag> tags;\r\n+\r\n+  void addTag(Tag tag) {\r\n+    if (tags.add(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+  void removeTag(Tag tag) {\r\n+    if (tags.remove(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+sealed class Tag {\r\n+  String get name;\r\n+  Color get color;\r\n+}\r\n+\r\n+final class BuiltInTag implements Tag {\r\n+  const BuiltInTag._(this.name, this.color);\r\n+\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final Color color;\r\n+}\r\n+\r\n+final class CustomTag implements Tag {\r\n+  const CustomTag(this.name, this.color);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final UserSelectableColor color;\r\n+}\r\n"
                },
                {
                    "date": 1700114057764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,12 @@\n import \"package:fridgital/shared/constants.dart\";\r\n import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n-  TagData(this.availableTags, this.tags);\r\n+  TagData(this.availableTags, this.activeTags);\r\n   TagData.empty()\r\n       : availableTags = {},\r\n-        tags = {};\r\n+        activeTags = {};\r\n \r\n   static TagData? maybeOf(BuildContext context) {\r\n     return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n   }\r\n@@ -16,79 +16,22 @@\n   static TagData of(BuildContext context) {\r\n     return maybeOf(context)!;\r\n   }\r\n \r\n-\r\n+  /// These are the tags that can be added.\r\n   final Set<Tag> availableTags;\r\n-  final Set<Tag> tags;\r\n \r\n-  void addTag(Tag tag) {\r\n-    if (tags.add(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n+  /// These are the tags that are currently active.\r\n+  final Set<Tag> activeTags;\r\n \r\n-  void removeTag(Tag tag) {\r\n-    if (tags.remove(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-sealed class Tag {\r\n-  String get name;\r\n-  Color get color;\r\n-}\r\n-\r\n-final class BuiltInTag implements Tag {\r\n-  const BuiltInTag._(this.name, this.color);\r\n-\r\n-  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final Color color;\r\n-}\r\n-\r\n-final class CustomTag implements Tag {\r\n-  const CustomTag(this.name, this.color);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final UserSelectableColor color;\r\n-}\r\n-import \"package:flutter/material.dart\";\r\n-import \"package:fridgital/shared/classes/selected_color.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n-\r\n-class TagData extends ChangeNotifier {\r\n-  TagData(this.tags);\r\n-  TagData.empty() : tags = {};\r\n-\r\n-  static TagData? maybeOf(BuildContext context) {\r\n-    return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n-  }\r\n-\r\n-  static TagData of(BuildContext context) {\r\n-    return maybeOf(context)!;\r\n-  }\r\n-\r\n-\r\n-  final Set<Tag> tags;\r\n-\r\n   void addTag(Tag tag) {\r\n-    if (tags.add(tag)) {\r\n+    if (activeTags.add(tag)) {\r\n       notifyListeners();\r\n     }\r\n   }\r\n \r\n   void removeTag(Tag tag) {\r\n-    if (tags.remove(tag)) {\r\n+    if (activeTags.remove(tag)) {\r\n       notifyListeners();\r\n     }\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1700132855384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,23 +3,16 @@\n import \"package:fridgital/shared/constants.dart\";\r\n import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n-  TagData(this.availableTags, this.activeTags);\r\n+  TagData(this.addableTags, this.activeTags);\r\n   TagData.empty()\r\n-      : availableTags = {},\r\n+      : addableTags = {},\r\n         activeTags = {};\r\n \r\n-  static TagData? maybeOf(BuildContext context) {\r\n-    return context.dependOnInheritedWidgetOfExactType<InheritedTagData>()?.tagData;\r\n-  }\r\n \r\n-  static TagData of(BuildContext context) {\r\n-    return maybeOf(context)!;\r\n-  }\r\n-\r\n   /// These are the tags that can be added.\r\n-  final Set<Tag> availableTags;\r\n+  final Set<Tag> addableTags;\r\n \r\n   /// These are the tags that are currently active.\r\n   final Set<Tag> activeTags;\r\n \r\n"
                },
                {
                    "date": 1700134805022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/shared/classes/selected_color.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+class TagData extends ChangeNotifier {\r\n+  TagData(this.addableTags, this.activeTags);\r\n+  TagData.empty()\r\n+      : addableTags = {},\r\n+        activeTags = {};\r\n+        \r\n+\r\n+  /// These are the tags that can be added.\r\n+  final Set<Tag> addableTags;\r\n+\r\n+  /// These are the tags that are currently active.\r\n+  final Set<Tag> activeTags;\r\n+\r\n+  void addTag(Tag tag) {\r\n+    if (activeTags.add(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+  void removeTag(Tag tag) {\r\n+    if (activeTags.remove(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+sealed class Tag {\r\n+  String get name;\r\n+  Color get color;\r\n+}\r\n+\r\n+final class BuiltInTag implements Tag {\r\n+  const BuiltInTag._(this.name, this.color);\r\n+\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final Color color;\r\n+}\r\n+\r\n+final class CustomTag implements Tag {\r\n+  const CustomTag(this.name, this.color);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final UserSelectableColor color;\r\n+}\r\n"
                },
                {
                    "date": 1700135017751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/shared/classes/selected_color.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+class TagData extends ChangeNotifier {\r\n+  \r\n+  TagData(this.addableTags, this.activeTags);\r\n+  TagData.empty()\r\n+      : addableTags = {},\r\n+        activeTags = {};\r\n+\r\n+  /// These are the tags that can be added.\r\n+  final Set<Tag> addableTags;\r\n+\r\n+  /// These are the tags that are currently active.\r\n+  final Set<Tag> activeTags;\r\n+\r\n+  void addTag(Tag tag) {\r\n+    if (activeTags.add(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+  void removeTag(Tag tag) {\r\n+    if (activeTags.remove(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+sealed class Tag {\r\n+  String get name;\r\n+  Color get color;\r\n+}\r\n+\r\n+final class BuiltInTag implements Tag {\r\n+  const BuiltInTag._(this.name, this.color);\r\n+\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final Color color;\r\n+}\r\n+\r\n+final class CustomTag implements Tag {\r\n+  const CustomTag(this.name, this.color);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final UserSelectableColor color;\r\n+}\r\n"
                },
                {
                    "date": 1700135486542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/shared/classes/selected_color.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+class TagData extends ChangeNotifier {\r\n+  TagData(this.addableTags, this.activeTags);\r\n+  TagData.empty()\r\n+      : addableTags = {},\r\n+        activeTags = {};\r\n+        \r\n+\r\n+  /// These are the tags that can be added.\r\n+  final Set<Tag> addableTags;\r\n+\r\n+  /// These are the tags that are currently active.\r\n+  final Set<Tag> activeTags;\r\n+\r\n+  void addTag(Tag tag) {\r\n+    if (activeTags.add(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+  void removeTag(Tag tag) {\r\n+    if (activeTags.remove(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+sealed class Tag {\r\n+  String get name;\r\n+  Color get color;\r\n+}\r\n+\r\n+final class BuiltInTag implements Tag {\r\n+  const BuiltInTag._(this.name, this.color);\r\n+\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final Color color;\r\n+}\r\n+\r\n+final class CustomTag implements Tag {\r\n+  const CustomTag(this.name, this.color);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final UserSelectableColor color;\r\n+}\r\n"
                },
                {
                    "date": 1700135517098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,71 +1,24 @@\n import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/back_end/database/tables/tags.dart\";\r\n import \"package:fridgital/shared/classes/selected_color.dart\";\r\n import \"package:fridgital/shared/constants.dart\";\r\n \r\n class TagData extends ChangeNotifier {\r\n   TagData(this.addableTags, this.activeTags);\r\n   TagData.empty()\r\n       : addableTags = {},\r\n         activeTags = {};\r\n-        \r\n \r\n-  /// These are the tags that can be added.\r\n-  final Set<Tag> addableTags;\r\n+  static Future<TagData> fromDatabase() async {\r\n+    var addableTags = <Tag>{};\r\n+    var activeTags = <Tag>{};\r\n \r\n-  /// These are the tags that are currently active.\r\n-  final Set<Tag> activeTags;\r\n+    CustomTagsTable().r\r\n \r\n-  void addTag(Tag tag) {\r\n-    if (activeTags.add(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n+    return TagData(addableTags, activeTags);\r\n   }\r\n \r\n-  void removeTag(Tag tag) {\r\n-    if (activeTags.remove(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-sealed class Tag {\r\n-  String get name;\r\n-  Color get color;\r\n-}\r\n-\r\n-final class BuiltInTag implements Tag {\r\n-  const BuiltInTag._(this.name, this.color);\r\n-\r\n-  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final Color color;\r\n-}\r\n-\r\n-final class CustomTag implements Tag {\r\n-  const CustomTag(this.name, this.color);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final UserSelectableColor color;\r\n-}\r\n-import \"package:flutter/material.dart\";\r\n-import \"package:fridgital/shared/classes/selected_color.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-class TagData extends ChangeNotifier {\r\n-  \r\n-  TagData(this.addableTags, this.activeTags);\r\n-  TagData.empty()\r\n-      : addableTags = {},\r\n-        activeTags = {};\r\n-\r\n   /// These are the tags that can be added.\r\n   final Set<Tag> addableTags;\r\n \r\n   /// These are the tags that are currently active.\r\n@@ -109,117 +62,4 @@\n \r\n   @override\r\n   final UserSelectableColor color;\r\n }\r\n-import \"package:flutter/material.dart\";\r\n-import \"package:fridgital/shared/classes/selected_color.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-class TagData extends ChangeNotifier {\r\n-  TagData(this.addableTags, this.activeTags);\r\n-  TagData.empty()\r\n-      : addableTags = {},\r\n-        activeTags = {};\r\n-        \r\n-\r\n-  /// These are the tags that can be added.\r\n-  final Set<Tag> addableTags;\r\n-\r\n-  /// These are the tags that are currently active.\r\n-  final Set<Tag> activeTags;\r\n-\r\n-  void addTag(Tag tag) {\r\n-    if (activeTags.add(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-\r\n-  void removeTag(Tag tag) {\r\n-    if (activeTags.remove(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-sealed class Tag {\r\n-  String get name;\r\n-  Color get color;\r\n-}\r\n-\r\n-final class BuiltInTag implements Tag {\r\n-  const BuiltInTag._(this.name, this.color);\r\n-\r\n-  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final Color color;\r\n-}\r\n-\r\n-final class CustomTag implements Tag {\r\n-  const CustomTag(this.name, this.color);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final UserSelectableColor color;\r\n-}\r\n-import \"package:flutter/material.dart\";\r\n-import \"package:fridgital/shared/classes/selected_color.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-import \"package:fridgital/widgets/inherited_widgets/inherited_tag_data.dart\";\r\n-\r\n-class TagData extends ChangeNotifier {\r\n-  TagData(this.addableTags, this.activeTags);\r\n-  TagData.empty()\r\n-      : addableTags = {},\r\n-        activeTags = {};\r\n-\r\n-\r\n-  /// These are the tags that can be added.\r\n-  final Set<Tag> addableTags;\r\n-\r\n-  /// These are the tags that are currently active.\r\n-  final Set<Tag> activeTags;\r\n-\r\n-  void addTag(Tag tag) {\r\n-    if (activeTags.add(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-\r\n-  void removeTag(Tag tag) {\r\n-    if (activeTags.remove(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-sealed class Tag {\r\n-  String get name;\r\n-  Color get color;\r\n-}\r\n-\r\n-final class BuiltInTag implements Tag {\r\n-  const BuiltInTag._(this.name, this.color);\r\n-\r\n-  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final Color color;\r\n-}\r\n-\r\n-final class CustomTag implements Tag {\r\n-  const CustomTag(this.name, this.color);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final UserSelectableColor color;\r\n-}\r\n"
                },
                {
                    "date": 1700135575527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   static Future<TagData> fromDatabase() async {\r\n     var addableTags = <Tag>{};\r\n     var activeTags = <Tag>{};\r\n \r\n-    CustomTagsTable().r\r\n+    CustomTagsTable(.readTags();\r\n \r\n     return TagData(addableTags, activeTags);\r\n   }\r\n \r\n"
                },
                {
                    "date": 1700135653699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/back_end/database/tables/tags.dart\";\r\n+import \"package:fridgital/shared/classes/selected_color.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+class TagData extends ChangeNotifier {\r\n+  TagData(this.addableTags, this.activeTags);\r\n+  TagData.empty()\r\n+      : addableTags = {},\r\n+        activeTags = {};\r\n+\r\n+  static Future<TagData> fromDatabase() async {\r\n+    var addableTags = <Tag>{};\r\n+    var activeTags = <Tag>{};\r\n+\r\n+    var addable = await CustomTagsTable.instance.readAddableTags();\r\n+    \r\n+\r\n+    return TagData(addableTags, activeTags);\r\n+  }\r\n+\r\n+  /// These are the tags that can be added.\r\n+  final Set<Tag> addableTags;\r\n+\r\n+  /// These are the tags that are currently active.\r\n+  final Set<Tag> activeTags;\r\n+\r\n+  void addTag(Tag tag) {\r\n+    if (activeTags.add(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+  void removeTag(Tag tag) {\r\n+    if (activeTags.remove(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+sealed class Tag {\r\n+  String get name;\r\n+  Color get color;\r\n+}\r\n+\r\n+final class BuiltInTag implements Tag {\r\n+  const BuiltInTag._(this.name, this.color);\r\n+\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final Color color;\r\n+}\r\n+\r\n+final class CustomTag implements Tag {\r\n+  const CustomTag(this.name, this.color);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final UserSelectableColor color;\r\n+}\r\n"
                },
                {
                    "date": 1700135702572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n   static Future<TagData> fromDatabase() async {\r\n     var addableTags = <Tag>{};\r\n     var activeTags = <Tag>{};\r\n \r\n-    var addable = await CustomTagsTable.instance.readAddableTags();\r\n-    \r\n+    var loadedAddable = await CustomTagsTable.instance.readAddableTags();\r\n+    addableTags.addAll(loadedAddable);\r\n \r\n     return TagData(addableTags, activeTags);\r\n   }\r\n \r\n@@ -63,69 +63,4 @@\n \r\n   @override\r\n   final UserSelectableColor color;\r\n }\r\n-import \"package:flutter/material.dart\";\r\n-import \"package:fridgital/back_end/database/tables/tags.dart\";\r\n-import \"package:fridgital/shared/classes/selected_color.dart\";\r\n-import \"package:fridgital/shared/constants.dart\";\r\n-\r\n-class TagData extends ChangeNotifier {\r\n-  TagData(this.addableTags, this.activeTags);\r\n-  TagData.empty()\r\n-      : addableTags = {},\r\n-        activeTags = {};\r\n-\r\n-  static Future<TagData> fromDatabase() async {\r\n-    var addableTags = <Tag>{};\r\n-    var activeTags = <Tag>{};\r\n-\r\n-    CustomTagsTable(.readTags();\r\n-\r\n-    return TagData(addableTags, activeTags);\r\n-  }\r\n-\r\n-  /// These are the tags that can be added.\r\n-  final Set<Tag> addableTags;\r\n-\r\n-  /// These are the tags that are currently active.\r\n-  final Set<Tag> activeTags;\r\n-\r\n-  void addTag(Tag tag) {\r\n-    if (activeTags.add(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-\r\n-  void removeTag(Tag tag) {\r\n-    if (activeTags.remove(tag)) {\r\n-      notifyListeners();\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-sealed class Tag {\r\n-  String get name;\r\n-  Color get color;\r\n-}\r\n-\r\n-final class BuiltInTag implements Tag {\r\n-  const BuiltInTag._(this.name, this.color);\r\n-\r\n-  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final Color color;\r\n-}\r\n-\r\n-final class CustomTag implements Tag {\r\n-  const CustomTag(this.name, this.color);\r\n-\r\n-  @override\r\n-  final String name;\r\n-\r\n-  @override\r\n-  final UserSelectableColor color;\r\n-}\r\n"
                },
                {
                    "date": 1700135936673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,13 @@\n   TagData.empty()\r\n       : addableTags = {},\r\n         activeTags = {};\r\n \r\n-  static Future<TagData> fromDatabase() async {\r\n+  static Future<TagData> emptyFromDatabase() async {\r\n     var addableTags = <Tag>{};\r\n     var activeTags = <Tag>{};\r\n \r\n+\r\n     var loadedAddable = await CustomTagsTable.instance.readAddableTags();\r\n     addableTags.addAll(loadedAddable);\r\n \r\n     return TagData(addableTags, activeTags);\r\n"
                },
                {
                    "date": 1700138192477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,11 @@\n   static Future<TagData> emptyFromDatabase() async {\r\n     var addableTags = <Tag>{};\r\n     var activeTags = <Tag>{};\r\n \r\n-\r\n     var loadedAddable = await CustomTagsTable.instance.readAddableTags();\r\n     addableTags.addAll(loadedAddable);\r\n+    print(\"B\");\r\n \r\n     return TagData(addableTags, activeTags);\r\n   }\r\n \r\n"
                },
                {
                    "date": 1700138222873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n     var activeTags = <Tag>{};\r\n \r\n     var loadedAddable = await CustomTagsTable.instance.readAddableTags();\r\n     addableTags.addAll(loadedAddable);\r\n-    print(\"B\");\r\n \r\n     return TagData(addableTags, activeTags);\r\n   }\r\n \r\n@@ -25,10 +24,12 @@\n \r\n   /// These are the tags that are currently active.\r\n   final Set<Tag> activeTags;\r\n \r\n-  void addTag(Tag tag) {\r\n+  Future<void> addTag(Tag tag) async {\r\n     if (activeTags.add(tag)) {\r\n+      await CustomTagsTable.instance.addTag();\r\n+\r\n       notifyListeners();\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1700138308135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   final Set<Tag> activeTags;\r\n \r\n   void addTag(Tag tag) {\r\n     if (activeTags.add(tag)) {\r\n-      CustomTagsTable.instance.addTag();\r\n+      CustomTagsTable.instance.addAddableTag();\r\n \r\n       notifyListeners();\r\n     }\r\n   }\r\n"
                },
                {
                    "date": 1700138341933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import \"dart:async\";\r\n+\r\n+import \"package:flutter/material.dart\";\r\n+import \"package:fridgital/back_end/database/tables/tags.dart\";\r\n+import \"package:fridgital/shared/classes/selected_color.dart\";\r\n+import \"package:fridgital/shared/constants.dart\";\r\n+\r\n+class TagData extends ChangeNotifier {\r\n+  TagData(this.addableTags, this.activeTags);\r\n+  TagData.empty()\r\n+      : addableTags = {},\r\n+        activeTags = {};\r\n+\r\n+  static Future<TagData> emptyFromDatabase() async {\r\n+    var addableTags = <Tag>{};\r\n+    var activeTags = <Tag>{};\r\n+\r\n+    var loadedAddable = await CustomTagsTable.instance.readAddableTags();\r\n+    addableTags.addAll(loadedAddable);\r\n+\r\n+    return TagData(addableTags, activeTags);\r\n+  }\r\n+\r\n+  /// These are the tags that can be added.\r\n+  final Set<Tag> addableTags;\r\n+\r\n+  /// These are the tags that are currently active.\r\n+  final Set<Tag> activeTags;\r\n+\r\n+  void addTag(CustomTag tag) {\r\n+    if (activeTags.add(tag)) {\r\n+      unawaited(CustomTagsTable.instance.addAddableTag(tag));\r\n+\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+  void removeTag(CustomTag tag) {\r\n+    if (activeTags.remove(tag)) {\r\n+      notifyListeners();\r\n+    }\r\n+  }\r\n+\r\n+  void addUnawaited\r\n+}\r\n+\r\n+sealed class Tag {\r\n+  String get name;\r\n+  Color get color;\r\n+}\r\n+\r\n+final class BuiltInTag implements Tag {\r\n+  const BuiltInTag._(this.name, this.color);\r\n+\r\n+  static const BuiltInTag essential = BuiltInTag._(\"essentials\", TagColors.essential);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final Color color;\r\n+}\r\n+\r\n+final class CustomTag implements Tag {\r\n+  const CustomTag(this.name, this.color);\r\n+\r\n+  @override\r\n+  final String name;\r\n+\r\n+  @override\r\n+  final UserSelectableColor color;\r\n+}\r\n"
                }
            ],
            "date": 1699832802607,
            "name": "Commit-0",
            "content": "\r\n\r\n"
        }
    ]
}
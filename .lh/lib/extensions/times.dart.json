{
    "sourceFile": "lib/extensions/times.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1698590426053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698590426101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1 @@\n+fo\n\\ No newline at end of file\n"
                },
                {
                    "date": 1698590457036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,9 @@\n-fo\n-f\n\\ No newline at end of file\n+extension TimesExtension on int {\r\n+  Iterable<int> get times sync* {\r\n+    for (var i = 0; i < this; ++i) {\r\n+      yield i;\r\n+    }\r\n+  }\r\n+\r\n+  Iterable<int> until(i)\r\n+}\r\n"
                },
                {
                    "date": 1698590457052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,9 @@\n+extension TimesExtension on int {\r\n+  Iterable<int> get times sync* {\r\n+    for (var i = 0; i < this; ++i) {\r\n+      yield i;\r\n+    }\r\n+  }\r\n+\r\n+  Iterable<int> until(in)\r\n+}\r\n"
                },
                {
                    "date": 1698590487224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,18 @@\n       yield i;\r\n     }\r\n   }\r\n \r\n-  Iterable<int> until(in)\r\n-}\r\n-extension TimesExtension on int {\r\n-  Iterable<int> get times sync* {\r\n-    for (var i = 0; i < this; ++i) {\r\n-      yield i;\r\n+  Iterable<int> until(int target) sync* {\r\n+    if (target < this) {\r\n+      for (var i = this; i > target; --i) {\r\n+        yield i;\r\n+      }\r\n+    } else {\r\n+      for (var i = this; i < target; ++i) {\r\n+        yield i;\r\n+      }\r\n     }\r\n   }\r\n \r\n-  Iterable<int> until(i)\r\n+  Iterable<int> to ()\r\n }\r\n"
                }
            ],
            "date": 1698590426053,
            "name": "Commit-0",
            "content": "f"
        }
    ]
}